%% ===readme===

% descrip: matlab scripts plot Nonlinear Ekman vertical velocity (W)
% based on Stern (1965) formulation  
% 1) Stern nonlinear Ekman vertical pumping velocity
% 2) linear Ekman vertical pumping velocity
% 3) CESM model output

% update history:
% v1.0 DL 2019Dec05
% v1.1 DL 2019Dec09
% v1.2 DL 2020Feb05

% extra notes:
% =============


%% === set up environments ===
clear all;close all;clc;

  date_str='2020Mar17'; 

% --- Oct-Mar av ---
MonSea = [01 02 03 10 11 12];
header = 'This file was generated by DL via code ComputeSaveTauKesaiRoWvelTempGlobalOctMarAv_2020Mar17.m';
outfileAv = ['../data_after_manipulation/TauKesaiRoWvelTempGlobalOctMarAv_',date_str,'.mat'];
% ------------------

addpath(genpath('Func4EkmanProject/'))

Constants4CESM_Global

tau_amp_csum  = 0;
tau_curl_csum = 0;
kesai_csum    = 0;
Ro_csum       = 0;
w_ne_csum     = 0;
w_le_csum     = 0;
w_te_csum     = 0;
w_ce_csum     = 0;
Tw_csum       = 0;
Ndays         = 0; 
%=============================


%% === data loading and analysis ===
for iyr = 87:90
  for imon = MonSea
      
%% === load data ===
infile_TTS  = ['../raw_data/CESM_GlobalRegrid87_90MonthlyDat/TAUXTAUYSSH/' ...
    'CESM_regrid_MonthlyOutput_TAUXTAUYSSH_',num2str(iyr),'-',num2str(imon,'%02d'),'.nc'];% ncdisp(infile)
disp(['loading ', infile_TTS])
taux = ncread(infile_TTS,'TAUX', start_3dvar,count_3dvar,stride_3dvar).*0.1; 
tauy = ncread(infile_TTS,'TAUY', start_3dvar,count_3dvar,stride_3dvar).*0.1; 
ssh  = ncread(infile_TTS,'SSH',  start_3dvar,count_3dvar,stride_3dvar).*0.01;
time = ncread(infile_TTS,'time');
ntime= numel(time);

infile_WVEL  = ['../raw_data/CESM_GlobalRegrid87_90MonthlyDat/WVEL/' ...
    'CESM_regrid_MonthlyOutput_WVEL_',num2str(iyr),'-',num2str(imon,'%02d'),'.nc'];% ncdisp(infile)
disp(['loading ', infile_WVEL])
wvel   = squeeze(ncread(infile_WVEL,'WVEL',  start_4dvar,count_4dvar,stride_4dvar)).*0.01;
z_wvel_ce = double(ncread(infile_WVEL,'z_w_top',start_z,count_z,stride_z));

infile_TEMP  = ['../raw_data/CESM_GlobalRegrid87_90MonthlyDat/TEMP/' ...
    'CESM_regrid_MonthlyOutput_TEMP_',num2str(iyr),'-',num2str(imon,'%02d'),'.nc'];% ncdisp(infile)
disp(['loading ', infile_TEMP])
Tw   = squeeze(ncread(infile_TEMP,'TEMP',start_4dvar,count_4dvar,stride_4dvar));
z_Tw = double(ncread(infile_TEMP,'z_t',  start_z,count_z,stride_z));

outfile = ['../data_after_manipulation/' ...
    'WvelTempGlobal_CESM_',num2str(iyr),'-',num2str(imon,'%02d'),'.mat'];% ncdisp(infile)
% ==================


%% === data analysis ===
for iday = 1 : ntime % loop through time
  disp(['analyzing day ', num2str(iday,'%02d')])

% --- compute wind stress amplitude and curl ---
  % compute wind stress amplitude 
  tau_amp  = sqrt((taux(:,:,iday)').^2+(tauy(:,:,iday)').^2);   
  % compute wind stress curl
  tau_curl = CalcCurlz4UnevenGridsFunc(x_2d,y_2d, ...
     taux(:,:,iday)',tauy(:,:,iday)');
% ----------------------------------------------

% --- compute geostrophic velocity and geostrophic vorticity ---
  % compute geostrophic velocity
  [Ug,Vg] = CalcGeostrophyVel4UnevenGridsFunc( ...
       ssh(:,:,iday)',x_2d,y_2d,lat_1d); 
  % compute geostrophic vorticity
  kesai = CalcCurlz4UnevenGridsFunc(x_2d,y_2d, ...
           Ug,Vg);
       
  % compute Rossby num
  Ro = kesai./f_rp; 
% --------------------------------------------

% --- compute linear and nonlinear Ekman Wvel ---
  [w_te,w_le,~] = CalcEkmanWvel4UnevenGridsFunc(rho_w,x_2d,y_2d, ...
      taux(:,:,iday)', tauy(:,:,iday)', f_rp, kesai);
  w_ne = w_te - w_le;
  
% 3d array for output files
  w_te_3d(:,:,iday) = w_te;  
  w_ne_3d(:,:,iday) = w_ne;
  w_le_3d(:,:,iday) = w_le;
  w_ce_3d(:,:,iday) = wvel(:,:,iday)';
  Tw_3d(:,:,iday)   = Tw(:,:,iday)';
% -------------------------

% --- compute cumulative sum (csum) --- 
  tau_amp_csum  = tau_amp_csum  + tau_amp;
  tau_curl_csum = tau_curl_csum + tau_curl;
  kesai_csum    = kesai_csum + kesai;
  Ro_csum       = Ro_csum + Ro;
  w_ne_csum     = w_ne_csum + w_ne;
  w_le_csum     = w_le_csum + w_le;
  w_te_csum     = w_te_csum + w_te;
  w_ce_csum     = w_ce_csum + wvel(:,:,iday)';
  Tw_csum       = Tw_csum   + Tw(:,:,iday)';
% ---------------

% --- compute number of loops ---
Ndays = Ndays + 1;
% -------------------------------

% --- clear vars to save memory --- 
clear tau_amp tau_curl Ug Vg kesai Ro w_ne w_le w_te 
% ---------------------------------
end

save(outfile,'header','lon_1d','lat_1d','w_ne_3d','w_le_3d', ...
    'w_te_3d','w_ce_3d','z_wvel_ce','Tw_3d','z_Tw')

% --- clear vars to save memory --- 
  clear infile_TTS infile_WVEL infile_TEMP taux tauy ssh time ntime  
  clear wvel Tw w_ne_3d w_le_3d w_te_3d w_ce_3d Tw_3d
% ---------------------------------

  end
end

% --- compute mean value ---
tau_amp_TimeAv  = tau_amp_csum ./ Ndays;
tau_curl_TimeAv = tau_curl_csum ./ Ndays;
kesai_TimeAv    = kesai_csum ./ Ndays;
Ro_TimeAv       = Ro_csum ./ Ndays;
w_ne_TimeAv     = w_ne_csum ./ Ndays;
w_le_TimeAv     = w_le_csum ./ Ndays;
w_te_TimeAv     = w_te_csum ./ Ndays;
w_ce_TimeAv     = w_ce_csum ./ Ndays;
Tw_TimeAv       = Tw_csum ./ Ndays;
% --------------------------
% ==================
  
  
%% === output data ===
save(outfileAv,'header','lon_1d','lat_1d','Ndays','z_wvel_ce','z_Tw', ...
  'tau_amp_TimeAv','tau_curl_TimeAv','kesai_TimeAv','Ro_TimeAv', ...
  'w_ne_TimeAv','w_le_TimeAv','w_te_TimeAv','w_ce_TimeAv','Tw_TimeAv') 
% ====================
